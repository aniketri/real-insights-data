name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    name: Deploy Frontend to Vercel
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if Vercel secrets are configured
        id: check-vercel
        run: |
          if [[ -n "${{ secrets.VERCEL_TOKEN }}" && -n "${{ secrets.VERCEL_ORG_ID }}" && -n "${{ secrets.VERCEL_PROJECT_ID }}" ]]; then
            echo "configured=true" >> $GITHUB_OUTPUT
          else
            echo "configured=false" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è  Vercel secrets not configured. Skipping deployment."
            echo "üìö See DEPLOYMENT_GUIDE.md for setup instructions."
          fi

      - name: Install pnpm
        if: steps.check-vercel.outputs.configured == 'true'
        uses: pnpm/action-setup@v2
        with:
          version: 9.6.0

      - name: Setup Node.js
        if: steps.check-vercel.outputs.configured == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Deploy to Vercel
        if: steps.check-vercel.outputs.configured == 'true'
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          npm install -g pnpm@9.6.0
          npm install -g vercel@latest
          cd apps/web
          vercel --token=${{ secrets.VERCEL_TOKEN }} --prod --yes

  deploy-backend:
    runs-on: ubuntu-latest
    name: Deploy Backend to Render
    
    steps:
      - name: Check if Render secrets are configured
        id: check-render
        run: |
          if [[ -n "${{ secrets.RENDER_SERVICE_ID }}" && -n "${{ secrets.RENDER_API_KEY }}" ]]; then
            echo "configured=true" >> $GITHUB_OUTPUT
          else
            echo "configured=false" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è  Render secrets not configured. Skipping deployment."
            echo "üìö See DEPLOYMENT_GUIDE.md for setup instructions."
          fi

      - name: Deploy to Render
        if: steps.check-render.outputs.configured == 'true'
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}

  notify:
    runs-on: ubuntu-latest
    needs: [deploy-frontend, deploy-backend]
    if: always()
    
    steps:
      - name: Deployment Status
        run: |
          echo "Frontend deployment: ${{ needs.deploy-frontend.result }}"
          echo "Backend deployment: ${{ needs.deploy-backend.result }}" 