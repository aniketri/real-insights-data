services:
  - type: web
    name: real-insights-api
    env: node
    plan: pro                    # ✅ UPGRADE: 2GB RAM, 1 CPU
    region: oregon
    
    # Build command optimized for production
    buildCommand: |
      npm install -g pnpm@9.6.0 && 
      pnpm install --frozen-lockfile && 
      echo "Generating Prisma client globally..." && 
      pnpm db:generate && 
      echo "Building db package..." && 
      pnpm --filter @repo/db build && 
      echo "Generating Prisma client for API..." && 
      cd apps/api && pnpm exec prisma generate --schema=../../packages/db/schema.prisma && cd ../.. &&
      echo "Building API..." && 
      pnpm --filter api build && 
      echo "Production build complete"
      
    startCommand: cd apps/api && pnpm start:prod
    
    # Auto-scaling for 10K users
    autoDeploy: true
    numInstances: 5              # ✅ INCREASED: Start with 5 instances
    
    # Auto-scaling configuration (if supported by plan)
    scaling:
      minInstances: 3            # Always have 3 running
      maxInstances: 8            # Scale up to 8 during peak
      targetCPU: 70             # Scale when CPU > 70%
      targetMemory: 80          # Scale when Memory > 80%
    
    # Environment variables optimized for 10K users
    envVars:
      - key: NODE_ENV
        value: production
        
      # Database configuration
      - key: DATABASE_URL
        fromDatabase:
          name: real-insights-db
          property: connectionString
          
      # Performance optimizations
      - key: NODE_OPTIONS
        value: "--max-old-space-size=1536 --optimize-for-size"
      - key: DATABASE_POOL_SIZE
        value: "50"              # Larger connection pool
      - key: DATABASE_CONNECTION_LIMIT
        value: "200"             # Higher connection limit
      - key: CACHE_TTL
        value: "600"             # 10-minute cache TTL
      - key: MAX_CONCURRENT_REQUESTS
        value: "1000"            # Handle more concurrent requests
        
      # Redis caching
      - key: REDIS_URL
        fromService:
          type: redis
          name: real-insights-redis
          property: connectionString
      - key: REDIS_TTL
        value: "900"             # 15-minute Redis cache
        
      # Security and authentication
      - key: JWT_SECRET
        generateValue: true
      - key: NEXTAUTH_SECRET
        sync: false
        
      # External service keys
      - key: RESEND_API_KEY
        sync: false
      - key: GOOGLE_CLIENT_ID
        sync: false
      - key: GOOGLE_CLIENT_SECRET
        sync: false
      - key: MICROSOFT_CLIENT_ID
        sync: false
      - key: MICROSOFT_CLIENT_SECRET
        sync: false
      - key: FRONTEND_URL
        sync: false
        
      # Monitoring and logging
      - key: LOG_LEVEL
        value: "info"
      - key: ENABLE_METRICS
        value: "true"
      - key: METRICS_PORT
        value: "9090"
    
    # Health check configuration
    healthCheckPath: /api/v1/health
    healthCheckTimeout: 30
    healthCheckInterval: 60
    
    # Disk configuration
    disk:
      name: real-insights-api-disk
      size: 50GB               # ✅ INCREASED: More storage for logs/cache
      
    # Network configuration for high throughput
    routes:
      - type: redirect
        source: /*
        destination: https://real-insights.vercel.app$1
        
  # Redis caching service for 10K users
  - type: redis
    name: real-insights-redis
    plan: standard             # 1GB memory, suitable for 10K users
    region: oregon
    
    # Redis configuration optimized for Real Insights
    maxmemory: "1gb"
    maxmemoryPolicy: "allkeys-lru"  # Evict least recently used keys
    
    # Redis persistence (optional, for cache durability)
    persistence: true
    
    # Access control
    ipAllowList: []            # Allow all IPs (secured by connection string)

# Database configuration
databases:
  - name: real-insights-db
    databaseName: real_insights
    plan: pro                  # ✅ UPGRADE: Dedicated resources
    region: oregon
    
    # Enhanced database configuration
    version: "6.0"             # Latest MongoDB version
    
    # Connection limits for 10K users
    maxConnections: 500
    
    # Security configuration
    ipAllowList: []            # Allow all IPs (secured by connection string)
    
    # Backup configuration
    backup:
      enabled: true
      retention: 7             # Keep backups for 7 days

# Optional: Background worker for heavy operations
  - type: worker
    name: real-insights-worker
    env: node
    plan: standard             # Smaller plan for background tasks
    region: oregon
    
    buildCommand: |
      npm install -g pnpm@9.6.0 && 
      pnpm install --frozen-lockfile && 
      pnpm db:generate && 
      pnpm --filter @repo/db build && 
      cd apps/worker && pnpm build
      
    startCommand: cd apps/worker && pnpm start
    
    # Worker-specific environment variables
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: real-insights-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: real-insights-redis
          property: connectionString
      - key: WORKER_CONCURRENCY
        value: "10"             # Process 10 jobs concurrently
      - key: JOB_TIMEOUT
        value: "300000"         # 5-minute job timeout

# Monitoring and alerting (if supported)
monitoring:
  alerts:
    - metric: cpu_usage
      threshold: 80
      duration: 300            # 5 minutes
      action: scale_up
      
    - metric: memory_usage
      threshold: 85
      duration: 120            # 2 minutes
      action: scale_up
      
    - metric: response_time
      threshold: 1000          # 1 second
      duration: 60             # 1 minute
      action: alert
      
    - metric: error_rate
      threshold: 1             # 1%
      duration: 60             # 1 minute
      action: alert

# Performance optimization settings
performance:
  # Enable HTTP/2 for better performance
  http2: true
  
  # Enable compression
  compression: true
  
  # Connection keep-alive
  keepAlive: true
  
  # Request timeout
  timeout: 30000             # 30 seconds
  
  # Body size limits
  maxBodySize: "10mb"
  
  # Rate limiting (if supported)
  rateLimit:
    requests: 1000           # 1000 requests per minute per IP
    window: 60               # 1-minute window 